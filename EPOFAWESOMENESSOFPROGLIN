#! /usr/bin/octave -qf

% m = num de linhas
% n = num de colunas

function [ind x] = simplex(A,b,c,m,n,print)

	%initialize x with dummy value
	x = 0
	
	%make b positive, adjust A accordingly.
	for i = 1:m
		if b(i) < 0
			b(i) = - b(1)
			A(i,:) = -A(i,:)
		endif
	endfor
	
	%build the phase1 tableau
	cext = [-sum(A),zeros(1,m)]
	tableau = [-sum(b),cext;b,A,eye(m)]
	basis = n+1:n+m
	
	%do the phase 1 magic
	[ind tableau basis] = runsimplex(basis,tableau,m,n)
	
	%no solution? ohnoes...
	if ind != 0
		return
	endif

	%resolver problemas de vars artificiais na base
	bi = 1
	for varname = basis
		if varname > n
		
			if sum(tableau(bi+1,2:n+1) == zeros(n)) == n %redundant restriction
				%remove redundant restriction, ajeitando o tableau, basis, A, b, m
				basis(bi) = []
				tableau(bi+1,:) = []
				A(bi,:) = []
				b(bi) = []
				--m
				
				--bi
				
			else %forcefully remove this var from the basis.
			
				for newvar = 1:n
					if tableau(1,newvar+1) != 0
						break
					endif
				endfor
				
				%queremos que a variável varname (na linha bi+1 do tableau) saia da base, e que newvar entre.
				%pivotando...
				tableau(bi+1,:) /= tableau(bi+1,newvar+1)
				
				for i = 1:m+1
					if i != bi+1
						tableau(i,:) -= tableau(i,newvar+1)*tableau(bi+1,:)
					endif
				endfor
				
				basis(bi) = newvar
				
			endif
		endif
		++bi
	endfor
	
	%ajeitar o tableau fase 2
	basismatrix = A(:,basis)
	cb(1:m,1) = c(basis)
	reducaocusto = basismatrix \ cb
	
	%VERIFICARSEESSAPOARRFUNFA.NAU.
	tableau = [ tableau(2:m+1,1)' * reducaocusto , reducaocusto ;tableau(2:m+1,1:n+1)]

	%do the phase 2 magic	
	[ind tableau basis] = runsimplex(basis,tableau,m,n)

	%TODO extrair o x
	ind = 0
endfunction

function [ind tableau basis] = runsimplex(basis,tableau,m,n)

	while 1 %condição de saída é não achar nenhuma coluna onde melhorar.

		%choose column
		col = 2
		while col <= n+m+1 && tableau(1,col) >= 0
			++col
		endwhile
		
		%THERESNOCOLUMN
		if col > n+m+1
			if tableau(1,1) < 0
				ind = 1
			else
				ind = 0
			endif
			return
		endif

		%choose row
		row = 0
		minvalue = Inf
		for i = 2:m+1
			if tableau(i,col) > 0
				theta = tableau(i,1) / tableau(i,col)
				if minvalue > theta
					row = i
					minvalue = theta
				endif
			endif
		endfor
		
		if row == 0 % nenhuma linha tem um custo > 0. Posso andar infinitamente
			ind = -1
			return
		endif
		
		%uptade the basis vector with the new var, removing the old var
		basis(row - 1) = col - 1
		
		%% pivotando...
		%put 1 hear.
		tableau(row,:) /= tableau(row,col)
		
		%put zeroes everywhear.
		for i = 1:m+1
			if i != row
				tableau(i,:) -= tableau(i,col)*tableau(row,:)
			endif
		endfor
	endwhile
	
	
endfunction

%TODO POR ; NA POARR TODA FOR MOAR SILENCE

m = 4
n = 4
A = [1, 2, 3, 0; -1, 2, 6, 0; 0, 4, 9, 0; 0, 0, 3, 1]
b = [3; 2; 5; 1]
c = [1; 1; 1; 0]
simplex(A, b, c, m, n, true)
