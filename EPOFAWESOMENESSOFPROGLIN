#! /usr/bin/octave -qf

% m = num de linhas
% n = num de colunas

function [ind x] = simplex(A,b,c,m,n,print)
	%make b positive, adjust A accordingly.
	for i = 1:m
		if b(i) < 0
			b(i) = - b(1)
			A(i,:) = -A(i,:)
		endif
	endfor
	
	%build the phase1 tableau
	cext = [-sum(A),zeros(1,m)]
	tableau = [-sum(b),cext;b,A,eye(m)]
	basis = n+1:n+m
	
	%do the phase 1 magic
	[ind tableau basis] = runsimplex(basis,tableau,m,n)

	%ajeitar o tableau fase 2
	%derp
	%[ind tableau basis] = runsimplex(basis,tableau,m,n)
	%extrair o x
	
	x = 0
endfunction

function [ind tableau basis] = runsimplex(basis,tableau,m,n)

	while 1 %condição de saída é não achar nenhuma coluna onde melhorar.
		%choose column
		col = 2
		while col <= n+m+1 && tableau(1,col) >= 0
			++col
		endwhile
		
		%THERESNOCOLUMN
		if col > n+m+1
			if tableau(1,1) < 0
				ind = 1
			else
				ind = 0
			endif
			return
		endif

		%choose row
		row = 0
		minvalue = Inf
		for i = 2:m+1
			if tableau(i,col) > 0
				theta = tableau(i,1) / tableau(i,col)
				if minvalue > theta
					row = i
					minvalue = theta
				endif
			endif
		endfor
		
		if row == 0
			ind = -1
			return
		endif
		
		%uptade the basis vector with the new var, removing the old var
		basis(row) = col
		
		%put 1 hear.
		tableau(row,:) /= tableau(row,col)
		
		%put zeroes everywhear.
		for i = 1:m+1
			if i != row
				tableau(i,:) -= tableau(i,col)*tableau(row,:)
			endif
		endfor
	endwhile
	
	
endfunction

% POR ; NA POARR TODA FOR MOAR SILENCE

m = 2
n = 3
A = [1, 2, 3; 4, 4, 5]
b = [10; 10]
c = [4; 3; 2]
simplex(A, b, c, m, n, true)
